mode: test

image_size: &image_size [256, 256]
device: &device cuda

dataset:
  return_dict: False
  split_size: [0.8, 0.1, 0.1]
  dataloader_config:
    batch_size: 16
    shuffle: True
    num_workers: 4
    pin_memory: True

unet:
  encoder_name: resnet18
  encoder_weights: null
  encoder_depth: 5
  decoder_channels: [256, 128, 64, 32, 16]

model:
  name: unet
  device: *device

optimizer:
  name: Adam
  learning_rate: 1e-4

loss:
  names: [ce, dice]
  alphas: [1, 0.5]
  dice_config:
    mode: multiclass
    from_logits: True

jaccard:
  task: multiclass
  num_classes: 3

metrics:
  - jaccard

train:
  num_epochs: 5
  device: *device
  log_dir: logs
  checkpoint_dir: checkpoints
  image_transforms:
    to_numpy: True
  mask_transforms:
    split_lungs: True
  all_transforms:
    horizontal_config:
      p: 0.5
    rotate_config:
      limit: 10
      p: 0.5
    image_size: *image_size

test:
  device: *device
  checkpoint_path: checkpoints
  image_transforms:
    to_numpy: True
  mask_transforms:
    split_lungs: True
  all_transforms:
    image_size: *image_size

